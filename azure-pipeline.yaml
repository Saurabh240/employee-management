trigger:
  branches:
    include:
      - main  # Or your desired branch

pool:
  vmImage: 'ubuntu-latest'

variables:
  acrName: 'vinayACRregistry' # Name of Azure Container Registry
  imageTag: latest # Unique tag for the Docker images
  aksResourceGroup: 'ProdResourceGroup'  # Resource group containing the AKS cluster
  aksClusterName: 'vinayAKScluster2'  # Name of the AKS cluster
  kubernetesNamespace: 'default'  # Namespace in AKS (use 'default' if not set)

jobs:
- job: Build_And_Push_Images
  displayName: "Build and Push Docker Images"
  steps:
    - task: DockerInstaller@0
      displayName: Install Docker

    # Build React App
    - task: Docker@2
      displayName: "Build Docker Image for React App"
      inputs:
        containerRegistry: '$(acrName)'
        repository: 'react-app'  # Name of the ACR repo for React
        command: 'buildAndPush'
        Dockerfile: './react-app/Dockerfile'  # Path to React Dockerfile
        tags: |
          $(imageTag)

    # Build Spring Boot App
    - task: Docker@2
      displayName: "Build Docker Image for Spring Boot App"
      inputs:
        containerRegistry: '$(acrName)'
        repository: 'springboot-app'  # Name of the ACR repo for Spring Boot
        command: 'buildAndPush'
        Dockerfile: './springboot-app/Dockerfile'  # Path to Spring Boot Dockerfile
        tags: |
          $(imageTag)

- job: Deploy_To_AKS
  displayName: "Deploy to AKS"
  dependsOn: Build_And_Push_Images
  # steps:
  #   - task: AzureKeyVault@2
  #     inputs:
  #     azureSubscription: 'your-service-connection'
  #     KeyVaultName: 'your-key-vault-name'
  #     SecretsFilter: '*'
  #     RunAsPreJob: true

  #   - script: echo $(your-secret-name)
  #     displayName: 'Print secret from Azure Key Vault'
    - task: KubectlInstaller@0
      displayName: Install Kubectl

    # Set the AKS context
    - task: AzureCLI@2
      displayName: "Set AKS Context"
      inputs:
        azureSubscription: 'Azure subscription 1(c7d2ca6c-69ed-45c7-a1cb-aad24f468f60)'
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          az aks get-credentials --resource-group $(aksResourceGroup) --name $(aksClusterName)

    # Deploy the React App
    - task: Kubernetes@1
      displayName: "Deploy React App to AKS"
      inputs:
        connectionType: 'Azure Resource Manager'
        azureSubscription: 'Azure subscription 1(c7d2ca6c-69ed-45c7-a1cb-aad24f468f60)'
        azureResourceGroup: '$(aksResourceGroup)'
        kubernetesCluster: '$(aksClusterName)'
        namespace: '$(kubernetesNamespace)'
        command: 'apply'
        useConfigurationFile: true
        configuration: './k8s/deployment.yaml'  # Path to Kubernetes manifest for React
        arguments: |
          -f ./k8s/service.yaml

    # Deploy the Spring Boot App
    - task: Kubernetes@1
      displayName: "Deploy Spring Boot App to AKS"
      inputs:
        connectionType: 'Azure Resource Manager'
        azureSubscription: 'Azure subscription 1(c7d2ca6c-69ed-45c7-a1cb-aad24f468f60)'
        azureResourceGroup: '$(aksResourceGroup)'
        kubernetesCluster: '$(aksClusterName)'
        namespace: '$(kubernetesNamespace)'
        command: 'apply'
        useConfigurationFile: true
        configuration: './k8s/deployment.yaml'  # Path to Kubernetes manifest for Spring Boot
        arguments: |
          -f ./k8s/service.yaml
